<template>
  <popup :visible.sync='visible' :height='877'>
    <view class="publicTop" :class="{leftTop:inChoiceGoods}" @click="back">
      <image class="leftCoin" src="/static/live/leftCoin.png" mode="scaleToFill" v-if="inChoiceGoods" />
      <text class="publicTopText">{{inChoiceGoods?'选择商品':'发送优惠券'}}</text>
    </view>
    <view class="inputContainer" :class="{hideInputContainer:inChoiceGoods}">
      <view class="sendCouponItem" style="margin-top:26rpx">
        <text class="sendCoupon-left">券类型</text>
        <view class="checkItem noRightCheckItem" @click='sendItem.tp=2'>
          <view class="check" :class="{ checkImg: sendItem.tp==2 }">
            <image class="bg" v-if="sendItem.tp==2" style="width:28rpx ;height:28rpx;top:0;left:0;" src="/static/live/redCheck.png" mode="scaleToFill" />
          </view>
          <text class="nomTxt f29">商品券</text>
        </view>
        <view class="checkItem noRightCheckItem" @click='sendItem.tp=1'>
          <view class="check" :class="{ checkImg: sendItem.tp==1 }">
            <image class="bg" v-if="sendItem.tp==1" style="width:28rpx ;height:28rpx;top:0;left:0;" src="/static/live/redCheck.png" mode="scaleToFill" />
          </view>
          <text class="nomTxt f29">店铺券</text>
        </view>
      </view>
      <view class="sendCouponItem" @click="inChoiceGoods=true" v-if="sendItem.tp==2">
        <text class="sendCoupon-left">选择商品</text>
        <text class="couponInput">{{ sendItem.goodCode || "请选择" }}</text>
        <image class="rightCoin" src="/static/live/rightCoin.png" mode="scaleToFill" />
      </view>
      <view class="sendCouponItem">
        <text class="sendCoupon-left">优惠券面额</text>
        <input :adjust-position='false' @click='showInputAction("amount")' class="couponInput" v-model.number="sendItem.amount" placeholder="请输入优惠券面额" type="digit">
        <image class="rightCoin" src="/static/live/rightCoin.png" mode="scaleToFill" />
      </view>
      <view class="sendCouponItem">
        <text class="sendCoupon-left">使用条件</text>
        <input :adjust-position='false' @click='showInputAction("minUseAmount")' class="couponInput" v-model.number="sendItem.minUseAmount" placeholder="小于面额视为无门槛券" type="digit">
        <image class="rightCoin" src="/static/live/rightCoin.png" mode="scaleToFill" />
      </view>
      <view class="sendCouponItem">
        <text class="sendCoupon-left">发放数量</text>
        <input :adjust-position='false' @click='showInputAction("num")' class="couponInput" v-model.number="sendItem.num" placeholder="请输入" type="number">
        <image class="rightCoin" src="/static/live/rightCoin.png" mode="scaleToFill" />
      </view>
      <view class="sendCouponItem" style='margin-bottom:59rpx'>
        <text class="sendCoupon-left">有效期</text>
        <view class="checkItem noRightCheckItem" @click='validityClick(item,index)' v-for="(item,index) in  validityList.list" :key='index'>
          <view class="check" :class="{ checkImg: validityList.index==index }">
            <image class="bg" v-if="validityList.index==index" style="width:28rpx ;height:28rpx;top:0;left:0;" src="/static/live/redCheck.png" mode="scaleToFill" />
          </view>
          <text class="nomTxt f29">{{item.label}}</text>
        </view>
      </view>
      <view class="checkContainer">
        <view class="checkItem" @click="timeDelay = true">
          <view class="check" :class="{ checkImg: timeDelay }">
            <image class="bg" v-if="timeDelay" style="width:28rpx ;height:28rpx;top:0;left:0;" src="/static/live/redCheck.png" mode="scaleToFill" />
          </view>
          <text class="nomTxt f29">2分钟后领取</text>
        </view>
        <view class="checkItem" @click="timeDelay = false">
          <view class="check" :class="{ checkImg: !timeDelay }">
            <image class="bg" v-if="!timeDelay" style="width:28rpx ;height:28rpx;top:0;left:0;" src="/static/live/redCheck.png" mode="scaleToFill" />
          </view>
          <text class="nomTxt f29">立即可领</text>
        </view>
      </view>
      <view class="submit flexCenter" @click="submit">
        <text class="nomTxt f29">发送优惠券</text>
      </view>
    </view>
    <scroll-view class="goodsList" :refresher-triggered="pullDown" :class="{ showGoodsList: inChoiceGoods }" :scroll-y="true" @refresherrefresh="refresherrefresh" refresher-enabled="true" refresher-background="#131219">
      <view class="none" v-if="reqSuccess && !goodsList.length">暂无在售商品</view>
      <view class="goodsItem" v-for="(item, index) in goodsList" :key="index">
        <image class="goodsImg" :src="parsePic(decodeURIComponent(item.pic_cdn || item.pic))" mode="aspectFill" />
        <text class="goodsTitle">{{ item.title }}</text>
        <text class="goodsChoice" @click="choice(item, index)"> 选择 </text>
      </view>
    </scroll-view>
    <fixdInput :keyHeight='keyHeight' :showInput.sync='showInput' @keyValueChange='keyValueChange' type='digit'/>
  </popup>
</template>
<script>
import popup from "./popup.nvue";
import fixdInput from "./fixdInput.nvue";
const app = getApp().globalData.app;
export default {
  components: {
    popup,
    fixdInput
  },
  props: {
    visible: {
      type: Boolean,
      default: false
    },
    alias: {
      type: String,
      default: ""
    },
    keyHeight:{
      type:Number,
      default:-2
    }
  },
  watch: {
    visible: function(val) {
      if (!val){
        this.$emit("update:visible", val);
        this.showInput=false
      } 
      if (val && !this.goodsList.length) this.getGoodsList();
    }
  },
  mounted() {
  },
  data() {
    return {
      showInput: false,
      selectKey:'',
      inChoiceGoods: false,
      parsePic: getApp().globalData.parsePic,
      validityList: {
        index: 0,
        list: [
          {
            label: "3天",
            minute: 3 * 24 * 60
          },
          {
            label: "7天",
            minute: 7 * 24 * 60
          },
          {
            label: "15天",
            minute: 15 * 24 * 60
          },
          {
            label: "30天",
            minute: 30 * 24 * 60
          }
        ]
      },
      sendItem: {
        tp: 2, //1店铺券//2商品券
        goodCode: "",
        amount: null,
        minUseAmount: null,
        num: null,
        lifeMinute: null, //有效期
        delayMinute: 2
      },
      timeDelay: true,
      goodsList: [],
      goodsQuery: {
        pageIndex: 1,
        pageSize: 20,
        tp: 1,
        urlvalid: 1
      },
      reqSuccess: false,
      totalPage: 0,
      pullDown: false
    };
  },

  methods: {
    choice(item) {
      this.sendItem.goodCode = item.goodCode;
      this.inChoiceGoods = false;
    },
    keyValueChange(val) {
      this.sendItem[this.selectKey] = val;
    },
    showInputAction(key){
      this.selectKey=key
      this.showInput=true
    },
    submit() {
      if (this.sendItem.tp == 2 && !this.sendItem.goodCode) {
        uni.showToast({
          title: "请选择商品",
          icon: "none"
        });
        return;
      }
      if (!this.sendItem.amount) {
        uni.showToast({
          title: "请输入正确的优惠券面额",
          icon: "none"
        });
        return;
      }
      if (!this.sendItem.num) {
        uni.showToast({
          title: "请输入正确的发放数量",
          icon: "none"
        });
        return;
      }
      if (this.sendItem.minUseAmount == null) {
        uni.showToast({
          title: "请输入使用条件",
          icon: "none"
        });
        return;
      }
      if (this.sendItem.num > 200) {
        uni.showToast({
          title: "优惠券发放数量超过最大限制",
          icon: "none"
        });
        return;
      }
      if (this.sendItem.amount > 10000) {
        uni.showToast({
          title: "面额过大,请核对面额",
          icon: "none"
        });
        return;
      }
      this.sendItem.lifeMinute = this.validityList.list[
        this.validityList.index
      ].minute;
      this.sendItem.delayMinute = this.timeDelay ? 2 : 0;
      if (this.sendItem.tp == 1) delete this.sendItem.goodCode;
      this.$emit("sendCoupon", this.sendItem);
      // this.$emit("update:visible", false);
    },
    validityClick(item, index) {
      if (this.validityList.index == index) return;
      this.validityList.index = index;
    },
    back() {
      this.inChoiceGoods && (this.inChoiceGoods = false);
    },
    refresherrefresh() {
      this.goodsQuery.pageIndex = 1;
      this.getGoodsList();
    },
    getGoodsList() {
      this.pullDown = true;
      console.log("获取在售商品", this.alias);
      app.http.Get(
        `merchant/1/goodlist/${this.alias}`,
        this.goodsQuery,
        res => {
          console.log("在售商品", res);
          this.reqSuccess = true;
          this.goodsList = res.list || [];
          this.totalPage = res.totalPage;
          setTimeout(() => {
            this.pullDown = false;
          }, 500);
        }
      );
    }
  }
};
</script>
<style lang="scss" scoped>
.inputContainer {
  position: absolute;
  /* transition: transform 0.5s; */
  transition-property: transform;
  transition-duration: 0.3s;
  transition-delay: 0s;
  top: 100rpx;
  align-items: center;
  transform: translateX(0rpx);
}

.hideInputContainer {
  transform: translateX(-750rpx);
}

.flexCenter {
  justify-content: center;
  align-items: center;
}

.submit {
  width: 702rpx;
  height: 92rpx;
  background: #ff404d;
  border-radius: 5rpx;
}

.f29 {
  font-size: 29rpx;
}

.nomTxt {
  font-size: 21rpx;

  
  color: #ffffff;
}

.publicTop {
  height: 97rpx;
  width: 750rpx;
  flex-direction: row;
  border-bottom: 1rpx solid rgba(232, 232, 232,.18);
  align-items: center;
  justify-content: center;
}

.leftTop {
  justify-content: flex-start;
  padding-left: 25rpx;
}

.leftCoin {
  width: 14rpx;
  height: 22rpx;
  margin-right: 22rpx;
}

.publicTopText {
  font-size: 33rpx;

  font-weight: 600;
  color: #ffffff;
}

.sendCouponItem {
  width: 750rpx;
  padding: 0 24rpx;
  /* justify-content: space-between; */
  flex-direction: row;
  align-items: center;
  margin-bottom: 46rpx;
}

.sendCoupon-left {
  font-size: 29rpx;
  
  font-weight: 600;
  color: #ffffff;
  flex: 1;
}

.couponInput {
  font-size: 25rpx;
  
  
  color: #ffffff;
  text-align: right;
  width: 340rpx;
  /* background-color: #fff; */
}

.rightCoin {
  width: 14rpx;
  height: 22rpx;
  margin-left: 15rpx;
}

.placeholder {
  font-size: 25rpx;
  
  
  color: #ffffff;
}

.checkContainer {
  flex-direction: row;
  justify-content: center;
  display: flex;
  margin-bottom: 40rpx
  /* justify-content: space-around; */
  // margin: 6rpx 0;
  // margin-bottom: 10rpx;
  /* width: 750rpx; */
}

.checkItem {
  display: flex;
  align-items: center;
  font-size: 29rpx;

  
  color: #ffffff;
  flex-direction: row;
  align-items: center;
  margin-right: 63rpx;
}

.noRightCheckItem {
  margin-right: 0;
  margin-left: 40rpx;
}

.check {
  width: 28rpx;
  height: 28rpx;
  border-radius: 50%;
  border: 2rpx solid #ffffff;
  margin-right: 13rpx;
  /* display: block; */
}

.checkImg {
  border: 0rpx solid #ffffff;
}

.goodsList {
  padding: 0 24rpx;
  width: 750rpx;
  /* box-sizing: border-box; */
  height: 690rpx;
  position: absolute;
  transform: translateX(750rpx);
  /* transition: transform 0.3s; */
  /* background-color: red; */
  top: 100rpx;
  transition-property: transform;
  transition-duration: 0.3s;
  transition-delay: 0s;
}

.none {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  height: 200rpx;
  text-align: center;
  /* margin: auto; */
  color: #fff;
}

.goodsItem {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-top: 27rpx;
  flex-direction: row;
}

.goodsImg {
  width: 141rpx;
  height: 113rpx;
  background-color: #ffffff;
  border-radius: 3rpx;
  overflow: hidden;
}

.goodsTitle {
 width: 406rpx;
  font-size: 25rpx;
  
  
  color: #ffffff;
  text-align: left;
  lines: 2;
  text-overflow: ellipsis;
}

.goodsChoice {
  width: 87rpx;
  height: 41rpx;
  background-color: #ec5e58;
  border-radius: 3rpx;
  font-size: 25rpx;
  
  
  color: #ffffff;
  text-align: center;
  line-height: 41rpx;
}

.showGoodsList {
  transform: translateX(0rpx);
}
</style>