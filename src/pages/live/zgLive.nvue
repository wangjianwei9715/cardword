<template>
	<view class="full">
		<web-view :catchtouchmove="true" :style="{height:height,width:width}" id='webView' v-if="viewShow"
			class="webView" ref="webview" :webview-styles="webviewStyles" @onPostMessage="handleMessage"
			:src="webViewUrl" allow='microphone;camera;midi;encrypted-media;'>
		</web-view>
		<view class='merchant' :style="{top:56+statusBarHeight+'rpx'}">
			<image :src='decodeURIComponent(merchantMessage.logo)' class='merchant_avatar' mode='aspectFill'
				@click='pageJump(`/pages/userinfo/merchant_shopsV2?id=${merchantMessage.id}`)'>
			</image>
			<view class='merchant_name'>
				<text class='merchant_name_text'>{{merchantMessage.name}}</text>
				<text class='merchant_name_like'>{{roomLikeNum}}本场点赞</text>
			</view>
			<text class='merchant_action' @click='attention'>{{merchantMessage.followed?'已关注':'关注'}}</text>
		</view>
		<!-- <view class="interaction">
			<view class="interaction_item">
				<image src="../../static/live/v2/order.png" class="interaction_icon" mode="aspectFill" style="width: 49rpx;height: 56rpx;"></image>
			</view>
			<view class="interaction_item" @click="share">
				<image src="../../static/live/v2/share.png" class="interaction_icon" mode="aspectFill" style="width: 43rpx;height: 37rpx;"></image>
			</view>
			<view class="interaction_item">
				<image src="../../static/live/v2/noneLove.png" class="interaction_icon" mode="aspectFill" style="width: 49rpx;height: 48rpx;"></image>
			</view>
		</view> -->
	</view>

</template>

<script>
	import request from '@/net/nuveRequest'
	import permision from "@/js_sdk/wa-permission/permission"
	import {
		Md5
	} from 'ts-md5/dist/md5';
	const isTest = false
	export default {
		data() {
			return {
				height: null,
				width: null,
				viewShow: false,
				webviewStyles: {
					progress: false
				},
				statusBarHeight: 0,
				webViewUrl: '',
				AnchorEndUrl: 'https://xlsh.7piccolo.com:8088/live/#/pages/liveStreaming/theAnchorEnd?ts=' + (+new Date()),
				// AnchorEndUrl: 'http://192.168.8.26:8081/#/pages/liveStreaming/theAnchorEnd',
				// UserUrl: 'https://xlsh.7piccolo.com:8088/live/#/pages/liveStreaming/index',
				UserUrl: 'http://192.168.8.26:8081/#/pages/liveStreaming/index?ts=' + (+new Date()),
				// webViewUrl: 'https://xlsh.7piccolo.com:8088/live/#/pages/liveStreaming/index', //用户端
				// webViewUrl: 'http://192.168.8.26:8080/#/pages/liveStreaming/index', //用户端
				deviceId: '', //设备ID用户用户未登录作为用户id进入直播间
				loginRoomData: {
					roomID: null,
					streamID: null,
					userID: null,
					userName: null,
					token: null
				},
				merchantMessage: {},
				appProfile: {

				},
				hasToken: Boolean(uni.getStorageSync("token") && JSON.parse(uni.getStorageSync("token"))
					.accessToken),
				context: null,
				tokenData: {
					token: '',
					anonymous: true, //是否匿名(不公开个人信息或者游客)
					uid: "",
					streamId: ""
				},
				liveData: {
					//状态  0 待直播,  1 即将直播  2 正在直播,  3 直播完成(回放)  -1 过期 -2 已取消
				},
				deviceInfo: {},
				roomLikeNum: 0,
			}
		},
		async onLoad(query) {
			// var result = await permision.requestAndroidPermission(['android.permission.CAMERA'])

			this.webViewUrl = query.isAnchor == 'true' ? this.AnchorEndUrl : this.UserUrl
			if (query.merchantId) this.getMerchant(+query.merchantId)
			if (query.roomID) this.loginRoomData.roomID = query.roomID
			if (query.streamID) this.loginRoomData.streamID = query.streamID
			uni.showLoading({
				title: '请稍等'
			})
			const {
				data
			} = await this.getLiveRoomInfo(+query.roomID)
			this.liveData = data
			console.log(this.liveData);
			uni.getSystemInfo({
				success: (res) => {
					this.deviceAssign(res)
					this.getUserProfile(res)
					this.deviceInfo = res
				}
			});
		},
		onShow() {
			uni.hideLoading()
		},
		onUnload() {
			if (this.$refs.webview) this.$refs.webview.evalJs(
				`logOutRoom(${JSON.stringify(this.loginRoomData)})`
			)
			if (this.tokenData.uid) request('brodcast/third/1001/user/logout/' + this.loginRoomData.roomID, {
				uid: this.tokenData.uid
			}, 'post')
		},
		methods: {
			//webview高度,设备相关
			deviceAssign(res) {
				this.deviceId = res.deviceId
				const hasNotchInScreen = plus.navigator.hasNotchInScreen()
				const safeAreaBottomHeight = res.screenHeight - res.safeArea.bottom
				const iosHeight = res.screenHeight + res.statusBarHeight + safeAreaBottomHeight
				this.statusBarHeight = res.statusBarHeight
				this.height = hasNotchInScreen ? iosHeight : res.screenHeight
				this.width = res.screenWidth
				this.viewShow = true
				uni.hideLoading()
			},
			//获取直播间信息
			async getLiveRoomInfo(roomID) {
				const ts = Math.round(+new Date() / 1000)
				const params = {
					ts,
					sign: Md5.hashStr(`1001room_${roomID}_${ts}`)
				}
				return request('brodcast/third/1001/roomInfo/' + roomID, params, 'get')
			},
			//获取及赋值
			async getUserProfile(deviceInfo) {
				let userData = {}
				const device = Md5.hashStr(deviceInfo.deviceId)

				console.log(this.loginRoomData.roomID);
				const tokenRespone = await request('brodcast/third/1001/user/login/' + this.loginRoomData.roomID, {},
					'post')
				this.tokenData = tokenRespone.data
				console.log(this.tokenData);
				if (this.hasToken) {
					const {
						data
					} = await request('me/home', {}, 'get')
					userData = data
					//匿名
					if (this.tokenData.anonymous) {
						userData.avatar =
							'https%3A%2F%2Fthirdwx.qlogo.cn%2Fmmopen%2Fvi_32%2FbYYh0TtEM9WHX1IwZJHRZ4IFEk6dhfLicT8LgJq6AOHymbZNxTY5Y6yX4EKcsLXicPic6mIl3Ne0VsDV8ygj3VdiaQ%2F132'
						userData.name = this.tokenData.uname
					}
				} else {
					//用设备号
					userData = {
						name: this.tokenData.uname,
						userId: this.tokenData.uid
					}
					// userData = {
					// 	userId: device,
					// 	name: '小卡迷' + deviceInfo.deviceId.substr(deviceInfo.deviceId.length - 4)
					// }
				}
				this.loginRoom(userData, tokenRespone.data, deviceInfo)
			},
			loginRoom(userData, roomTokenData, deviceInfo) {
				this.appProfile = userData
				this.loginRoomData.userID = roomTokenData.uid
				this.loginRoomData.userName = userData.name
				this.loginRoomData.token = roomTokenData.token
				this.loginRoomData.streamID = roomTokenData.streamId || null
				setTimeout(() => {
					this.$refs.webview.evalJs(
						`statusBarHeight=${deviceInfo.statusBarHeight}`
					) //通知webView手机状态栏高度
					this.againLogin()
				}, 1000)
			},
			againLogin() {
				this.$refs.webview.evalJs(
					`loginRoom(${JSON.stringify(this.loginRoomData)},${JSON.stringify(this.appProfile)},${JSON.stringify(this.liveData)})`
				) //登录房间
			},
			getMerchant(merchantId) {
				request('merchant/detail/' + merchantId, {}, 'get').then(res => {
					this.merchantMessage = res.data
				})
			},
			attention() {
				if (!this.hasToken) {
					uni.navigateTo({
						url: '/pages/login/login'
					})
				}
				request("merchant/follow/" + this.merchantMessage.id, {}, 'post').then(res => {
					this.merchantMessage.followed = res.data.follow
				})
			},
			stopLive() {
				const stopSign = Md5.hashStr('stopPushStream' +
					`_${this.loginRoomData.roomID}_${this.loginRoomData.streamID}`)
				request('brodcast/third/1001/achor/stopPush/' + this.loginRoomData.roomID, {
					sign: stopSign
				}, "post").then(res => {
					console.log('结束直播');
				}).catch(err => {
					console.log(err);
				})
			},
			//推流
			pushStream() {
				//首次推流获取streamID,改变直播状态
				if (this.liveData && this.liveData.state <= 1) request('brodcast/third/1001/achor/push/' + this
					.loginRoomData.roomID, {}, 'post')
			},
			//点赞
			addLike(likeNum) {
				request('brodcast/third/1001/user/like/' + this.loginRoomData.roomID, {
					num: likeNum,
					uid: this.loginRoomData.userID
				}, 'post').then(res => {
					this.roomLikeNum = res.data.totalNum
				})
			},
			noneAuthTips() {
				uni.showModal({
					title: '温馨提示',
					content: '请前往系统设置,手动开启录音、相机等权限后,重新进入直播间',
					showCancel: false,
					success: ({
						confirm
					}) => {
						if (confirm) permision.gotoAppPermissionSetting()
					}
				})
			},
			back() {
				uni.navigateBack({
					delta: 1
				})
			},
			refreshToken() {},
			// netWork
			share() {
				uni.showLoading({
					title: '请稍等'
				})
				uni.share({
					provider: "weixin",
					type: 0,
					imageUrl: "https://ka-world.oss-cn-shanghai.aliyuncs.com/admin/debug/2022.04.14/loot/loot_sw/0/1649923645699n8fv080wdf.jpg",
					title: "拆卡进行中！",
					summary: '拆卡进行中！',
					scene: "WXSceneSession",
					href: 'https://www.ka-world.com/share/h5/#/pages/live/index',
					success: (res) => {},
					fail: (err) => {
						console.log("失败原因=>", err);
						uni.showToast({
							title: "分享失败",
							icon: "none"
						});
					},
					complete: (res) => {
						uni.hideLoading()

					}
				});
			},
			loginError(err) {
				uni.showToast({
					title: '房间进入失败',
					icon: 'none'
				})
				console.log(err);
			},
			pageJump(url) {
				uni.navigateTo({
					url
				})
			},
			handleMessage(event) {
				//接收webViewPostMessage
				const {
					data
				} = event.detail
				const resData = data[0]
				this[resData.action](resData.params || null)
			}
		}
	}
</script>

<style>
	.full {
		background-color: black;
		position: fixed;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		overflow: hidden;
	}

	.merchant {
		/* width: 252rpx; */
		height: 72rpx;
		background: rgba(0, 0, 0, .38);
		/* background-color: #fff; */
		border-radius: 36rpx;
		position: fixed;
		left: 24rpx;
		display: flex;
		flex-direction: row;
		align-items: center;
		padding: 0 14rpx;
	}

	.merchant_avatar {
		width: 61rpx;
		height: 61rpx;
		border-radius: 50%;
		margin-right: 13rpx;
	}

	.merchant_name {
		flex-direction: column;
	}

	.merchant_name_text {
		font-size: 25rpx;
		font-family: PingFang SC;
		font-weight: 400;
		color: #FFFFFF;

	}

	.merchant_name_like {
		font-size: 20rpx;
		font-family: PingFang SC;
		font-weight: 300;
		color: #FFFFFF;

	}

	.merchant_action {
		width: 93rpx;
		background: linear-gradient(to right, #EF3333, #EB6141);
		height: 50rpx;
		border-radius: 25rpx;
		font-size: 29rpx;
		font-family: PingFang SC;
		font-weight: 600;
		color: #FFFFFF;
		line-height: 50rpx;
		text-align: center;
		margin-left: 15rpx;
	}

	.interaction {
		position: absolute;
		bottom: 24rpx;
		right: 27rpx;
		justify-content: flex-end;
		/* background-color: red; */
		/* width: 300rpx; */
		flex-direction: row;
	}

	.interaction_item {
		width: 73rpx;
		height: 73rpx;
		background: rgba(0, 0, 0, .28);
		border-radius: 50%;
		margin-left: 14rpx;
		/* justify-content:; */
		align-items: center;
		display: flex;
		justify-content: center;
	}

	.interaction_icon {
		display: block;
	}
</style>
