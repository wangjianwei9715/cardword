<template>
	<view class="full" @click='webClick'>
		<web-view :catchtouchmove="true" :style="{height:height,width:width}" id='webView' allow="fullscreen"
			v-if="viewShow" class="webView" ref="webview" :webview-styles="webviewStyles" @onPostMessage="handleMessage"
			:src="webViewUrl">
		</web-view>
		<view class='merchant' :style="{top:56+statusBarHeight+'rpx'}">
			<image :src='decodeURIComponent(merchantMessage.merchantLogo)' class='merchant_avatar' mode='aspectFill'
				@click='pageJump(`/pages/userinfo/merchant_shopsV2?id=${merchantMessage.merchantId}`)'>
			</image>
			<view class='merchant_name'>
				<text class='merchant_name_text'>{{merchantMessage.merchantName}}</text>
				<text class='merchant_name_like'>{{999}}本场点赞</text>
			</view>
			<text class='merchant_action' @click='attention'>{{merchantMessage.followed?'已关注':'关注'}}</text>
			<!-- <view class='merchant_action'>
				<image></image>
				<text>关注</text>
			</view> -->
		</view>
	</view>

</template>

<script>
	import request from '@/net/nuveRequest'
	import {
		Md5
	} from 'ts-md5/dist/md5';
	const isTest = false
	export default {
		data() {
			return {
				height: null,
				width: null,
				viewShow: false,
				webviewStyles: {
					progress: false
				},
				statusBarHeight: 0,
				// webViewUrl: 'https://xlsh.7piccolo.com:8088/live/#/pages/liveStreaming/theAnchorEnd', //主播端
				// webViewUrl: 'https://xlsh.7piccolo.com:8088/live/#/pages/liveStreaming/index', //用户端
				webViewUrl: 'http://192.168.8.26:8080/#/pages/liveStreaming/index', //用户端
				deviceId: '', //设备ID用户用户未登录作为用户id进入直播间
				loginRoomData: {
					roomID: null,
					streamID: null,
					userID: null,
					userName: null,
					token: null
				},
				merchantMessage: {},
				appProfile: {

				},
				hasToken: Boolean(uni.getStorageSync("token") && JSON.parse(uni.getStorageSync("token"))
					.accessToken),
				queryToken: '',
				queryStreamID: ''
			}
		},
		onLoad(query) {
			if (query.roomID) this.loginRoomData.roomID = query.roomID
			if (query.streamID) this.loginRoomData.streamID = query.streamID
			if (query.merchantMessage) this.merchantMessage = JSON.parse(query.merchantMessage)

			uni.getSystemInfo({
				success: (res) => {
					this.deviceAssign(res)
					this.getMerchant()
					this.getUserProfile(res)
				}
			});
		},
		onShow() {
			uni.hideLoading()
		},
		onUnload() {
			if (this.$refs.webview) this.$refs.webview.evalJs(
				`logOutRoom(${JSON.stringify(this.loginRoomData)})`
			)
		},
		methods: {
			//webview高度,设备相关
			deviceAssign(res) {
				this.deviceId = res.deviceId
				const hasNotchInScreen = plus.navigator.hasNotchInScreen()
				const safeAreaBottomHeight = res.screenHeight - res.safeArea.bottom
				const iosHeight = res.screenHeight + res.statusBarHeight + safeAreaBottomHeight
				this.statusBarHeight = res.statusBarHeight
				this.height = hasNotchInScreen ? iosHeight : res.screenHeight
				this.width = res.screenWidth
				this.viewShow = true
			},
			//获取及赋值
			async getUserProfile(deviceInfo) {
				let userData = {}
				if (this.hasToken) {
					const {
						data
					} = await request('me/home', {}, 'get')
					userData = data
				} else {
					//用设备号
					userData = {
						userId: deviceInfo.deviceId,
						name: '小卡迷' + deviceInfo.deviceId.substr(deviceInfo.deviceId.length - 4)
					}
				}
				const tokenData = await request('brodcast/third/1001/user/login/' + this.loginRoomData.roomID, {},
					'post')
				this.loginRoom(userData, tokenData.token, deviceInfo)
			},
			loginRoom(userData, roomToken, deviceInfo) {
				this.appProfile = userData
				this.loginRoomData.userID = userData.userId + ''
				this.loginRoomData.userName = userData.name
				this.loginRoomData.token = roomToken
				setTimeout(() => {
					this.$refs.webview.evalJs(
						`statusBarHeight=${deviceInfo.statusBarHeight}`
					) //通知webView手机状态栏高度
					this.$refs.webview.evalJs(
						`loginRoom(${JSON.stringify(this.loginRoomData)},${JSON.stringify(this.appProfile)})`
					) //登录房间
				}, 500)
			},
			getMerchant() {
				//未登录用户
				if (!this.hasToken) {
					this.merchantMessage.followed = false
					return
				}
				//登录用户
				if (this.hasToken) {
					request('merchant/detail/' + this.merchantMessage.merchantId, {}, 'get').then(res => {
						this.merchantMessage.followed = res.data.followed
					}).catch(err => {
						this.merchantMessag.followed = false
					})
				}
			},
			attention() {
				if (!this.hasToken) {
					uni.navigateTo({
						url: '/pages/login/login'
					})
				}
				request("merchant/follow/" + this.merchantMessage.merchantId,'post').then(res=>{
					this.merchantMessage.followed=res.data
				})
			},
			stopLive() {
				const stopSign = Md5.hashStr('stopPushStream' +
					`_${this.loginRoomData.roomID}_${this.loginRoomData.streamID}`)
				request('brodcast/third/1001/achor/stopPush/' + this.loginRoomData.roomID, {
					sign: stopSign
				}, "post").then(res => {
					console.log('结束直播');
				}).catch(err => {
					console.log(err);
				})
			},
			//推流
			pushStream() {
				//误操退出直播间后，重新进入直播间重新推流
				if (this.loginRoomData.streamID) {
					this.$refs.webview.evalJs(`streamID="${this.loginRoomData.streamID}"`) //推送streamID
					return
				}
				//首次推流获取streamID,改变直播状态
				request('brodcast/third/1001/achor/push/' + this.loginRoomData.roomID, {}, 'post').then(res => {
					this.loginRoomData.streamID = res.streamID
					this.$refs.webview.evalJs(`streamID="${res.streamID}"`) //推送streamID
				}).catch(err => {
					this.$refs.webview.evalJs(`streamIDError=true}`) //通知错误
				})
			},
			back() {
				uni.navigateBack({
					delta: 1
				})
			},
			refreshToken() {
				// request('https://xlsh.7piccolo.com:6400/getZgToken', { //node测试token接口(后续换)
				// 	userID: this.appProfile.userId,
				// 	roomID: this.loginRoomData.roomID
				// }, 'post').then(res => {
				// 	this.$refs.webview.evalJs(
				// 		`refreshZgToken(${JSON.stringify({
				// 			token:res.data,
				// 			roomID:this.loginRoomData.roomID
				// 		})})`
				// 	) //更新token
				// })
			},
			// netWork
			share() {
				uni.showLoading({
					title: '请稍等'
				})
				uni.share({
					provider: "weixin",
					type: 0,
					imageUrl: "https://ka-world.oss-cn-shanghai.aliyuncs.com/admin/debug/2022.04.14/loot/loot_sw/0/1649923645699n8fv080wdf.jpg",
					title: "拆卡进行中！",
					summary: '拆卡进行中！',
					scene: "WXSceneSession",
					href: 'https://www.ka-world.com/share/h5/#/pages/live/index',
					success: (res) => {},
					fail: (err) => {
						console.log("失败原因=>", err);
						uni.showToast({
							title: "分享失败",
							icon: "none"
						});
					},
					complete: (res) => {
						uni.hideLoading()

					}
				});
			},
			pageJump(url) {
				uni.navigateTo({
					url
				})
			},
			handleMessage(event) {
				//接收webViewPostMessage
				const {
					data
				} = event.detail
				const resData = data[0]
				this[resData.action]()
			}
		}
	}
</script>

<style>
	.full {
		background-color: black;
		position: fixed;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		overflow: hidden;
	}

	.merchant {
		/* width: 252rpx; */
		height: 72rpx;
		background: rgba(0, 0, 0, .38);
		/* background-color: #fff; */
		border-radius: 36rpx;
		position: fixed;
		left: 24rpx;
		display: flex;
		flex-direction: row;
		align-items: center;
		padding: 0 14rpx;
	}

	.merchant_avatar {
		width: 61rpx;
		height: 61rpx;
		border-radius: 50%;
		margin-right: 13rpx;
	}

	.merchant_name {
		flex-direction: column;
	}

	.merchant_name_text {
		font-size: 25rpx;
		font-family: PingFang SC;
		font-weight: 400;
		color: #FFFFFF;

	}

	.merchant_name_like {
		font-size: 20rpx;
		font-family: PingFang SC;
		font-weight: 300;
		color: #FFFFFF;

	}

	.merchant_action {
		width: 93rpx;
		background: linear-gradient(to right, #EF3333, #EB6141);
		height: 50rpx;
		border-radius: 25rpx;
		font-size: 29rpx;
		font-family: PingFang SC;
		font-weight: 600;
		color: #FFFFFF;
		line-height: 50rpx;
		text-align: center;
		margin-left: 15rpx;
	}
</style>
